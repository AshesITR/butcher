% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/train.recipe.R
\name{axe-train.recipe}
\alias{axe-train.recipe}
\alias{axe_call.train.recipe}
\alias{axe_ctrl.train.recipe}
\alias{axe_data.train.recipe}
\alias{axe_env.train.recipe}
\alias{axe_fitted.train.recipe}
\title{Axing a train.recipe object.}
\usage{
\method{axe_call}{train.recipe}(x, ...)

\method{axe_ctrl}{train.recipe}(x, ...)

\method{axe_data}{train.recipe}(x, ...)

\method{axe_env}{train.recipe}(x, ...)

\method{axe_fitted}{train.recipe}(x, ...)
}
\arguments{
\item{x}{train.recipe object}

\item{...}{any additional arguments related to axing}
}
\value{
axed train.recipe object
}
\description{
train.recipe objects are slightly different from train objects
created from the \code{caret} package in that it also includes
instructions from a \code{recipe} for data pre-processing. Axing
functions specific to train.recipe are thus included as additional
steps are required to remove the fat attached to train.recipe objects.
}
\examples{
# Load libraries
suppressWarnings(suppressMessages(library(caret)))
suppressWarnings(suppressMessages(library(recipes)))
suppressWarnings(suppressMessages(library(dplyr)))
suppressWarnings(suppressMessages(library(QSARdata)))

# Load data
data(AquaticTox)
tox <- AquaticTox_moe2D
tox$Activity <- AquaticTox_Outcome$Activity # Add the outcome variable

# Create an additional helper variable for performance measure
tox <- tox \%>\%
  select(-Molecule) \%>\%
  ## Suppose the easy of manufacturability is
  ## related to the molecular weight of the compound
  mutate(manufacturability  = 1/moe2D_Weight) \%>\%
  mutate(manufacturability = manufacturability/sum(manufacturability))

# Helper function to calculate weights based on manufacturability
model_stats <- function(data, lev = NULL, model = NULL) {
  stats <- defaultSummary(data, lev = lev, model = model)
  wt_rmse <- function (pred, obs, wts, na.rm = TRUE)
    sqrt(weighted.mean((pred - obs)^2, wts, na.rm = na.rm))
  res <- wt_rmse(pred = data$pred,
                 obs = data$obs,
                 wts = data$manufacturability)
  c(wRMSE = res, stats)
}

# Create a recipe
tox_recipe <- recipe(Activity ~ ., data = tox) \%>\%
  add_role(manufacturability, new_role = "performance var") \%>\%
  # Remove zero variance predictors
  step_nzv(all_predictors()) \%>\%
  # Retrain the components required to capture 95\% of info
  step_pca(contains("VSA"), prefix = "surf_area_", threshold = .95) \%>\%
  # Avoid having predictor pairs with correlation greater than 90\%
  step_corr(all_predictors(), -starts_with("surf_area"), threshold = .90) \%>\%
  # Center and scale
  step_center(all_predictors()) \%>\%
  step_scale(all_predictors())

# Create model and fit
set.seed(888)
tox_ctrl <- trainControl(method = "cv", summaryFunction = model_stats)
train.recipe_fit <- train(tox_recipe, tox,
                   method = "svmRadial",
                   metric = "wRMSE",
                   maximize = FALSE,
                   tuneLength = 10,
                   trControl = tox_ctrl)

butcher(train.recipe_fit)

}
