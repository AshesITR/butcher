# Generated by roxygen2: do not edit by hand

S3method(axe_call,C5.0)
S3method(axe_call,classbagg)
S3method(axe_call,default)
S3method(axe_call,elnet)
S3method(axe_call,flexsurvreg)
S3method(axe_call,kknn)
S3method(axe_call,lm)
S3method(axe_call,model_fit)
S3method(axe_call,multnet)
S3method(axe_call,randomForest)
S3method(axe_call,ranger)
S3method(axe_call,rpart)
S3method(axe_call,sclass)
S3method(axe_call,stanreg)
S3method(axe_call,survreg)
S3method(axe_call,train)
S3method(axe_call,train.recipe)
S3method(axe_ctrl,C5.0)
S3method(axe_ctrl,default)
S3method(axe_ctrl,flexsurvreg)
S3method(axe_ctrl,model_fit)
S3method(axe_ctrl,rpart)
S3method(axe_ctrl,train)
S3method(axe_ctrl,train.recipe)
S3method(axe_data,classbagg)
S3method(axe_data,default)
S3method(axe_data,flexsurvreg)
S3method(axe_data,model_fit)
S3method(axe_data,survreg)
S3method(axe_data,train)
S3method(axe_data,train.recipe)
S3method(axe_env,"function")
S3method(axe_env,classbagg)
S3method(axe_env,default)
S3method(axe_env,flexsurvreg)
S3method(axe_env,formula)
S3method(axe_env,kknn)
S3method(axe_env,lm)
S3method(axe_env,ml_model)
S3method(axe_env,ml_pipeline_model)
S3method(axe_env,ml_pipeline_stage)
S3method(axe_env,model_fit)
S3method(axe_env,quosure)
S3method(axe_env,recipe)
S3method(axe_env,rpart)
S3method(axe_env,sclass)
S3method(axe_env,stanreg)
S3method(axe_env,step)
S3method(axe_env,step_BoxCox)
S3method(axe_env,step_YeoJohnson)
S3method(axe_env,step_arrange)
S3method(axe_env,step_bagimpute)
S3method(axe_env,step_bin2factor)
S3method(axe_env,step_bs)
S3method(axe_env,step_center)
S3method(axe_env,step_classdist)
S3method(axe_env,step_corr)
S3method(axe_env,step_count)
S3method(axe_env,step_date)
S3method(axe_env,step_depth)
S3method(axe_env,step_discretize)
S3method(axe_env,step_downsample)
S3method(axe_env,step_dummy)
S3method(axe_env,step_factor2string)
S3method(axe_env,step_filter)
S3method(axe_env,step_geodist)
S3method(axe_env,step_holiday)
S3method(axe_env,step_hyperbolic)
S3method(axe_env,step_ica)
S3method(axe_env,step_integer)
S3method(axe_env,step_interact)
S3method(axe_env,step_inverse)
S3method(axe_env,step_invlogit)
S3method(axe_env,step_isomap)
S3method(axe_env,step_knnimpute)
S3method(axe_env,step_kpca)
S3method(axe_env,step_lag)
S3method(axe_env,step_lincomb)
S3method(axe_env,step_log)
S3method(axe_env,step_logit)
S3method(axe_env,step_lowerimpute)
S3method(axe_env,step_meanimpute)
S3method(axe_env,step_medianimpute)
S3method(axe_env,step_modeimpute)
S3method(axe_env,step_mutate)
S3method(axe_env,step_naomit)
S3method(axe_env,step_nnmf)
S3method(axe_env,step_novel)
S3method(axe_env,step_ns)
S3method(axe_env,step_num2factor)
S3method(axe_env,step_nzv)
S3method(axe_env,step_ordinalscore)
S3method(axe_env,step_other)
S3method(axe_env,step_pca)
S3method(axe_env,step_pls)
S3method(axe_env,step_poly)
S3method(axe_env,step_range)
S3method(axe_env,step_ratio)
S3method(axe_env,step_regex)
S3method(axe_env,step_relu)
S3method(axe_env,step_rm)
S3method(axe_env,step_rollimpute)
S3method(axe_env,step_scale)
S3method(axe_env,step_shuffle)
S3method(axe_env,step_slice)
S3method(axe_env,step_spatialsign)
S3method(axe_env,step_sqrt)
S3method(axe_env,step_string2factor)
S3method(axe_env,step_unorder)
S3method(axe_env,step_upsample)
S3method(axe_env,step_window)
S3method(axe_env,step_zv)
S3method(axe_env,survreg)
S3method(axe_env,terms)
S3method(axe_env,train)
S3method(axe_env,train.recipe)
S3method(axe_fitted,C5.0)
S3method(axe_fitted,default)
S3method(axe_fitted,kknn)
S3method(axe_fitted,lm)
S3method(axe_fitted,model_fit)
S3method(axe_fitted,ranger)
S3method(axe_fitted,stanreg)
S3method(axe_fitted,train)
S3method(axe_fitted,train.recipe)
S3method(axe_misc,default)
S3method(axe_misc,matrix)
S3method(axe_misc,ml_model)
S3method(axe_misc,model_fit)
S3method(axe_misc,multnet)
S3method(axe_misc,rpart)
S3method(take_inventory,default)
S3method(take_inventory,lm)
S3method(weigh,default)
S3method(weigh,ksvm)
S3method(weigh,model_fit)
S3method(weigh,stanreg)
export(axe_call)
export(axe_ctrl)
export(axe_data)
export(axe_env)
export(axe_fitted)
export(axe_misc)
export(butcher)
export(take_inventory)
export(weigh)
