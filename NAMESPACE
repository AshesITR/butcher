# Generated by roxygen2: do not edit by hand

S3method(axe_call,C5.0)
S3method(axe_call,default)
S3method(axe_call,elnet)
S3method(axe_call,glm)
S3method(axe_call,glmnet)
S3method(axe_call,lm)
S3method(axe_call,model_fit)
S3method(axe_call,rpart)
S3method(axe_call,stanreg)
S3method(axe_ctrl,C5.0)
S3method(axe_ctrl,default)
S3method(axe_ctrl,elnet)
S3method(axe_ctrl,glm)
S3method(axe_ctrl,glmnet)
S3method(axe_ctrl,keras.engine.sequential.Sequential)
S3method(axe_ctrl,keras.engine.training.Model)
S3method(axe_ctrl,lm)
S3method(axe_ctrl,model_fit)
S3method(axe_ctrl,rpart)
S3method(axe_ctrl,stanreg)
S3method(axe_env,C5.0)
S3method(axe_env,data.frame)
S3method(axe_env,default)
S3method(axe_env,elnet)
S3method(axe_env,glm)
S3method(axe_env,glmnet)
S3method(axe_env,keras.engine.sequential.Sequential)
S3method(axe_env,keras.engine.training.Model)
S3method(axe_env,lm)
S3method(axe_env,model_fit)
S3method(axe_env,rpart)
S3method(axe_env,stanreg)
S3method(axe_env,terms)
S3method(carve,lm)
S3method(carve,model_fit)
S3method(take_inventory,default)
S3method(take_inventory,lm)
export(axe_call)
export(axe_ctrl)
export(axe_env)
export(carve)
export(take_inventory)
export(weigh)
importFrom(magrittr,"%>%")
importFrom(rlang,.data)
